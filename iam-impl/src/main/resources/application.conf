play.i18n.langs = [ "en", "en-US", "de-DE" ]

play.application.loader = mdpm.iam.impl.svc.IamLoader

play.mailer {
  host = "example.com"     // (mandatory)
  port = 25                // (defaults to 25)
  ssl = no                 // (defaults to no)
  tls = no                 // (defaults to no)
  tlsRequired = no         // (defaults to no)
  user = null              // (optional)
  password = null          // (optional)
  debug = no               // (defaults to no, to take effect you also need to set the log level to "DEBUG" for the application logger)
  timeout = null           // (defaults to 60s in milliseconds)
  connectiontimeout = null // (defaults to 60s in milliseconds)
  mock = yes               // (defaults to no, will only log all the email properties instead of sending an email)
}

# ---------------------------------------------------------------------------------------------------------------------
# CASSANDRA
# ---------------------------------------------------------------------------------------------------------------------

iam.cassandra.keyspace = iam

# The journal stores serialized events
cassandra-journal.keyspace = ${iam.cassandra.keyspace}

# The snapshot store stores snapshots of the state as an optimization for faster recovery
cassandra-snapshot-store.keyspace = ${iam.cassandra.keyspace}

# The offset store is used for Cassandra Read-Side support to keep track of the most recent
# event handled by each read-side processor
lagom.persistence.read-side.cassandra.keyspace = ${iam.cassandra.keyspace}

# ---------------------------------------------------------------------------------------------------------------------
# Lagom default configuration overrides
# ---------------------------------------------------------------------------------------------------------------------

# The properties below override Lagom default configuration with the recommended values for new projects.
#
# Lagom has not yet made these settings the defaults for backward-compatibility reasons.

# Prefer 'ddata' over 'persistence' to share cluster sharding state for new projects.
# See https://doc.akka.io/docs/akka/current/cluster-sharding.html#distributed-data-vs-persistence-mode
akka.cluster.sharding.state-store-mode = ddata

# Enable the serializer for akka.Done provided in Akka 2.5.8+ to avoid the use of Java serialization.
akka.actor.serialization-bindings {
  "akka.Done" = akka-misc
}
