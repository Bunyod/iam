{
  "akka":{
    "actor":{
      "additional-serialization-bindings":{
        "akka.actor.ActorIdentity":"akka-misc",
        "akka.actor.ActorInitializationException":"akka-misc",
        "akka.actor.ActorKilledException":"akka-misc",
        "akka.actor.ActorRef":"akka-misc",
        "akka.actor.Identify":"akka-misc",
        "akka.actor.IllegalActorStateException":"akka-misc",
        "akka.actor.InvalidActorNameException":"akka-misc",
        "akka.actor.InvalidMessageException":"akka-misc",
        "akka.actor.Kill$":"akka-misc",
        "akka.actor.LocalScope$":"akka-misc",
        "akka.actor.PoisonPill$":"akka-misc",
        "akka.actor.Status$Failure":"akka-misc",
        "akka.actor.Status$Success":"akka-misc",
        "akka.cluster.pubsub.DistributedPubSubMediator$Internal$SendToOneSubscriber":"akka-pubsub",
        "akka.dispatch.sysmsg.SystemMessage":"akka-system-msg",
        "akka.remote.RemoteScope":"akka-misc",
        "akka.remote.RemoteWatcher$Heartbeat$":"akka-misc",
        "akka.remote.RemoteWatcher$HeartbeatRsp":"akka-misc",
        "akka.remote.routing.RemoteRouterConfig":"akka-misc",
        "akka.routing.BalancingPool":"akka-misc",
        "akka.routing.BroadcastGroup":"akka-misc",
        "akka.routing.BroadcastPool":"akka-misc",
        "akka.routing.DefaultResizer":"akka-misc",
        "akka.routing.FromConfig":"akka-misc",
        "akka.routing.RandomGroup":"akka-misc",
        "akka.routing.RandomPool":"akka-misc",
        "akka.routing.RoundRobinGroup":"akka-misc",
        "akka.routing.RoundRobinPool":"akka-misc",
        "akka.routing.ScatterGatherFirstCompletedGroup":"akka-misc",
        "akka.routing.ScatterGatherFirstCompletedPool":"akka-misc",
        "akka.routing.SmallestMailboxPool":"akka-misc",
        "akka.routing.TailChoppingGroup":"akka-misc",
        "akka.routing.TailChoppingPool":"akka-misc",
        "akka.util.ByteString$ByteString1":"primitive-bytestring",
        "akka.util.ByteString$ByteString1C":"primitive-bytestring",
        "akka.util.ByteString$ByteStrings":"primitive-bytestring",
        "com.typesafe.config.Config":"akka-misc",
        "com.typesafe.config.impl.SimpleConfig":"akka-misc",
        "java.lang.Integer":"primitive-int",
        "java.lang.Long":"primitive-long",
        "java.lang.String":"primitive-string",
        "java.lang.Throwable":"java",
        "scala.Int":"primitive-int",
        "scala.Long":"primitive-long",
        "scala.None$":"akka-misc",
        "scala.Some":"akka-misc"
      },
      "allow-java-serialization":"on",
      "creation-timeout":"20s",
      "debug":{
        "autoreceive":"off",
        "event-stream":"off",
        "fsm":"off",
        "lifecycle":"off",
        "receive":"off",
        "router-misconfiguration":"off",
        "unhandled":"off"
      },
      "default-blocking-io-dispatcher":{
        "executor":"thread-pool-executor",
        "thread-pool-executor":{
          "fixed-pool-size":16
        },
        "throughput":1,
        "type":"Dispatcher"
      },
      "default-dispatcher":{
        "affinity-pool-executor":{
          "fair-work-distribution":{
            "threshold":128
          },
          "idle-cpu-level":5,
          "parallelism-factor":0.8,
          "parallelism-max":64,
          "parallelism-min":4,
          "queue-selector":"akka.dispatch.affinity.FairDistributionHashCache",
          "rejection-handler":"akka.dispatch.affinity.ThrowOnOverflowRejectionHandler",
          "task-queue-size":512
        },
        "attempt-teamwork":"on",
        "default-executor":{
          "fallback":"fork-join-executor"
        },
        "executor":"default-executor",
        "fork-join-executor":{
          "parallelism-factor":1,
          "parallelism-max":24,
          "parallelism-min":8,
          "task-peeking-mode":"LIFO"
        },
        "mailbox-requirement":"",
        "shutdown-timeout":"1s",
        "thread-pool-executor":{
          "allow-core-timeout":"on",
          "core-pool-size-factor":3,
          "core-pool-size-max":64,
          "core-pool-size-min":8,
          "fixed-pool-size":"off",
          "keep-alive-time":"60s",
          "max-pool-size-factor":3,
          "max-pool-size-max":64,
          "max-pool-size-min":8,
          "task-queue-size":-1,
          "task-queue-type":"linked"
        },
        "throughput":5,
        "throughput-deadline-time":"0ms",
        "type":"Dispatcher"
      },
      "default-mailbox":{
        "mailbox-capacity":1000,
        "mailbox-push-timeout-time":"10s",
        "mailbox-type":"akka.dispatch.UnboundedMailbox",
        "stash-capacity":10000
      },
      "deployment":{
        "/IO-DNS/inet-address":{
          "mailbox":"unbounded",
          "nr-of-instances":4,
          "router":"consistent-hashing-pool"
        },
        "/IO-DNS/inet-address/*":{
          "dispatcher":"akka.actor.default-blocking-io-dispatcher"
        },
        "default":{
          "cluster":{
            "allow-local-routees":"on",
            "enabled":"off",
            "max-nr-of-instances-per-node":1,
            "max-total-nr-of-instances":10000,
            "use-role":"",
            "use-roles":[]
          },
          "dispatcher":"",
          "mailbox":"",
          "nr-of-instances":1,
          "optimal-size-exploring-resizer":{
            "action-interval":"5s",
            "chance-of-exploration":0.4,
            "chance-of-ramping-down-when-full":0.2,
            "downsize-after-underutilized-for":"72h",
            "downsize-ratio":0.8,
            "enabled":"off",
            "explore-step-size":0.1,
            "lower-bound":1,
            "optimization-range":16,
            "upper-bound":10,
            "weight-of-latest-metric":0.5
          },
          "remote":"",
          "resizer":{
            "backoff-rate":0.1,
            "backoff-threshold":0.3,
            "enabled":"off",
            "lower-bound":1,
            "messages-per-resize":10,
            "pressure-threshold":1,
            "rampup-rate":0.2,
            "upper-bound":10
          },
          "routees":{
            "paths":[]
          },
          "router":"from-code",
          "tail-chopping-router":{
            "interval":"10 milliseconds"
          },
          "target":{
            "nodes":[]
          },
          "virtual-nodes-factor":10,
          "within":"5 seconds"
        }
      },
      "dsl":{
        "default-timeout":"5s",
        "inbox-size":1000
      },
      "enable-additional-serialization-bindings":"on",
      "guardian-supervisor-strategy":"akka.actor.DefaultSupervisorStrategy",
      "java-serialization-disabled-additional-serialization-bindings":{
        "akka.Done":"akka-misc",
        "akka.actor.Address":"akka-misc",
        "akka.remote.UniqueAddress":"akka-misc"
      },
      "mailbox":{
        "bounded-control-aware-queue-based":{
          "mailbox-type":"akka.dispatch.BoundedControlAwareMailbox"
        },
        "bounded-deque-based":{
          "mailbox-type":"akka.dispatch.BoundedDequeBasedMailbox"
        },
        "bounded-queue-based":{
          "mailbox-type":"akka.dispatch.BoundedMailbox"
        },
        "logger-queue":{
          "mailbox-type":"akka.event.LoggerMailboxType"
        },
        "requirements":{
          "akka.dispatch.BoundedControlAwareMessageQueueSemantics":"akka.actor.mailbox.bounded-control-aware-queue-based",
          "akka.dispatch.BoundedDequeBasedMessageQueueSemantics":"akka.actor.mailbox.bounded-deque-based",
          "akka.dispatch.BoundedMessageQueueSemantics":"akka.actor.mailbox.bounded-queue-based",
          "akka.dispatch.ControlAwareMessageQueueSemantics":"akka.actor.mailbox.unbounded-control-aware-queue-based",
          "akka.dispatch.DequeBasedMessageQueueSemantics":"akka.actor.mailbox.unbounded-deque-based",
          "akka.dispatch.MultipleConsumerSemantics":"akka.actor.mailbox.unbounded-queue-based",
          "akka.dispatch.UnboundedControlAwareMessageQueueSemantics":"akka.actor.mailbox.unbounded-control-aware-queue-based",
          "akka.dispatch.UnboundedDequeBasedMessageQueueSemantics":"akka.actor.mailbox.unbounded-deque-based",
          "akka.dispatch.UnboundedMessageQueueSemantics":"akka.actor.mailbox.unbounded-queue-based",
          "akka.event.LoggerMessageQueueSemantics":"akka.actor.mailbox.logger-queue"
        },
        "unbounded-control-aware-queue-based":{
          "mailbox-type":"akka.dispatch.UnboundedControlAwareMailbox"
        },
        "unbounded-deque-based":{
          "mailbox-type":"akka.dispatch.UnboundedDequeBasedMailbox"
        },
        "unbounded-queue-based":{
          "mailbox-type":"akka.dispatch.UnboundedMailbox"
        }
      },
      "provider":"akka.cluster.ClusterActorRefProvider",
      "router":{
        "type-mapping":{
          "balancing-pool":"akka.routing.BalancingPool",
          "broadcast-group":"akka.routing.BroadcastGroup",
          "broadcast-pool":"akka.routing.BroadcastPool",
          "consistent-hashing-group":"akka.routing.ConsistentHashingGroup",
          "consistent-hashing-pool":"akka.routing.ConsistentHashingPool",
          "from-code":"akka.routing.NoRouter",
          "random-group":"akka.routing.RandomGroup",
          "random-pool":"akka.routing.RandomPool",
          "round-robin-group":"akka.routing.RoundRobinGroup",
          "round-robin-pool":"akka.routing.RoundRobinPool",
          "scatter-gather-group":"akka.routing.ScatterGatherFirstCompletedGroup",
          "scatter-gather-pool":"akka.routing.ScatterGatherFirstCompletedPool",
          "smallest-mailbox-pool":"akka.routing.SmallestMailboxPool",
          "tail-chopping-group":"akka.routing.TailChoppingGroup",
          "tail-chopping-pool":"akka.routing.TailChoppingPool"
        }
      },
      "serialization-bindings":{
        "[B":"bytes",
          "akka.Done":"akka-misc",
          "akka.actor.ActorSelectionMessage":"akka-containers",
          "akka.cluster.ClusterMessage":"akka-cluster",
          "akka.cluster.client.ClusterClientMessage":"akka-cluster-client",
          "akka.cluster.ddata.ReplicatedDataSerialization":"akka-replicated-data",
          "akka.cluster.ddata.Replicator$ReplicatorMessage":"akka-data-replication",
          "akka.cluster.pubsub.DistributedPubSubMessage":"akka-pubsub",
          "akka.cluster.routing.ClusterRouterPool":"akka-cluster",
          "akka.cluster.sharding.ClusterShardingSerializable":"akka-sharding",
          "akka.cluster.singleton.ClusterSingletonMessage":"akka-singleton",
          "akka.persistence.serialization.Message":"akka-persistence-message",
          "akka.persistence.serialization.Snapshot":"akka-persistence-snapshot",
          "akka.protobuf.GeneratedMessage":"proto",
          "akka.remote.DaemonMsgCreate":"daemon-create",
          "akka.remote.artery.ArteryMessage":"artery",
          "akka.stream.SinkRef":"akka-stream-ref",
          "akka.stream.SourceRef":"akka-stream-ref",
          "akka.stream.impl.streamref.StreamRefsProtocol":"akka-stream-ref",
          "akka.testkit.JavaSerializable":"java",
          "com.google.protobuf.GeneratedMessage":"proto",
          "com.lightbend.lagom.internal.persistence.cluster.ClusterDistribution$EnsureActive":"lagom-scaladsl-persistence",
          "com.lightbend.lagom.internal.persistence.cluster.ClusterStartupTaskActor$Execute$":"lagom-persistence-core",
          "com.lightbend.lagom.scaladsl.persistence.CommandEnvelope":"lagom-scaladsl-persistence",
          "com.lightbend.lagom.scaladsl.persistence.PersistentEntity$InvalidCommandException":"lagom-scaladsl-persistence",
          "com.lightbend.lagom.scaladsl.persistence.PersistentEntity$PersistException":"lagom-scaladsl-persistence",
          "com.lightbend.lagom.scaladsl.persistence.PersistentEntity$UnhandledCommandException":"lagom-scaladsl-persistence",
          "java.io.Serializable":"java",
          "java.util.Optional":"akka-misc"
      },
      "serialization-identifiers":{
        "akka.cluster.client.protobuf.ClusterClientMessageSerializer":15,
        "akka.cluster.ddata.protobuf.ReplicatedDataSerializer":11,
        "akka.cluster.ddata.protobuf.ReplicatorMessageSerializer":12,
        "akka.cluster.protobuf.ClusterMessageSerializer":5,
        "akka.cluster.pubsub.protobuf.DistributedPubSubMessageSerializer":9,
        "akka.cluster.sharding.protobuf.ClusterShardingMessageSerializer":13,
        "akka.cluster.singleton.protobuf.ClusterSingletonMessageSerializer":14,
        "akka.persistence.serialization.MessageSerializer":7,
        "akka.persistence.serialization.SnapshotSerializer":8,
        "akka.remote.serialization.ArteryMessageSerializer":17,
        "akka.remote.serialization.ByteStringSerializer":21,
        "akka.remote.serialization.DaemonMsgCreateSerializer":3,
        "akka.remote.serialization.IntSerializer":19,
        "akka.remote.serialization.LongSerializer":18,
        "akka.remote.serialization.MessageContainerSerializer":6,
        "akka.remote.serialization.MiscMessageSerializer":16,
        "akka.remote.serialization.ProtobufSerializer":2,
        "akka.remote.serialization.StringSerializer":20,
        "akka.remote.serialization.SystemMessageSerializer":22,
        "akka.serialization.ByteArraySerializer":4,
        "akka.serialization.JavaSerializer":1,
        "akka.stream.serialization.StreamRefSerializer":30,
        "akka.testkit.TestMessageSerializer":23,
        "com.lightbend.lagom.internal.persistence.cluster.ClusterStartupTaskSerializer":-1543173302,
        "com.lightbend.lagom.internal.scaladsl.persistence.protobuf.PersistenceMessageSerializer":1000003,
        "com.lightbend.lagom.scaladsl.playjson.PlayJsonSerializer":1000004
      },
      "serialize-creators":"off",
      "serialize-messages":"off",
      "serializers":{
        "akka-cluster":"akka.cluster.protobuf.ClusterMessageSerializer",
        "akka-cluster-client":"akka.cluster.client.protobuf.ClusterClientMessageSerializer",
        "akka-containers":"akka.remote.serialization.MessageContainerSerializer",
        "akka-data-replication":"akka.cluster.ddata.protobuf.ReplicatorMessageSerializer",
        "akka-misc":"akka.remote.serialization.MiscMessageSerializer",
        "akka-persistence-message":"akka.persistence.serialization.MessageSerializer",
        "akka-persistence-snapshot":"akka.persistence.serialization.SnapshotSerializer",
        "akka-pubsub":"akka.cluster.pubsub.protobuf.DistributedPubSubMessageSerializer",
        "akka-replicated-data":"akka.cluster.ddata.protobuf.ReplicatedDataSerializer",
        "akka-sharding":"akka.cluster.sharding.protobuf.ClusterShardingMessageSerializer",
        "akka-singleton":"akka.cluster.singleton.protobuf.ClusterSingletonMessageSerializer",
        "akka-stream-ref":"akka.stream.serialization.StreamRefSerializer",
        "akka-system-msg":"akka.remote.serialization.SystemMessageSerializer",
        "artery":"akka.remote.serialization.ArteryMessageSerializer",
        "bytes":"akka.serialization.ByteArraySerializer",
        "daemon-create":"akka.remote.serialization.DaemonMsgCreateSerializer",
        "java":"akka.serialization.JavaSerializer",
        "lagom-persistence-core":"com.lightbend.lagom.internal.persistence.cluster.ClusterStartupTaskSerializer",
        "lagom-scaladsl-persistence":"com.lightbend.lagom.internal.scaladsl.persistence.protobuf.PersistenceMessageSerializer",
        "primitive-bytestring":"akka.remote.serialization.ByteStringSerializer",
        "primitive-int":"akka.remote.serialization.IntSerializer",
        "primitive-long":"akka.remote.serialization.LongSerializer",
        "primitive-string":"akka.remote.serialization.StringSerializer",
        "proto":"akka.remote.serialization.ProtobufSerializer",
        "test-message-serializer":"akka.testkit.TestMessageSerializer"
      },
      "typed":{
        "timeout":"5s"
      },
      "unstarted-push-timeout":"10s",
      "warn-about-java-serializer-usage":"on",
      "warn-on-no-serialization-verification":"on"
    },
    "cluster":{
      "allow-weakly-up-members":"on",
      "auto-down-unreachable-after":"off",
      "client":{
        "acceptable-heartbeat-pause":"13s",
        "buffer-size":1000,
        "establishing-get-contacts-interval":"3s",
        "heartbeat-interval":"2s",
        "initial-contacts":[],
        "receptionist":{
          "acceptable-heartbeat-pause":"13s",
          "failure-detection-interval":"2s",
          "heartbeat-interval":"2s",
          "name":"receptionist",
          "number-of-contacts":3,
          "response-tunnel-receive-timeout":"30s",
          "role":"",
          "use-dispatcher":""
        },
        "reconnect-timeout":"off",
        "refresh-contacts-interval":"60s"
      },
      "configuration-compatibility-check":{
        "checkers":{
          "akka-cluster":"akka.cluster.JoinConfigCompatCheckCluster",
          "akka-cluster-sharding":"akka.cluster.sharding.JoinConfigCompatCheckSharding"
        },
        "enforce-on-join":"on",
        "sensitive-config-paths":{
          "akka":["user.home",
            "user.name",
            "user.dir",
            "socksNonProxyHosts",
            "http.nonProxyHosts",
            "ftp.nonProxyHosts",
            "akka.remote.secure-cookie",
            "akka.remote.netty.ssl.security",
            "akka.remote.artery.ssl"]
        }
      },
      "debug":{
        "verbose-gossip-logging":"off",
        "verbose-heartbeat-logging":"off"
      },
      "distributed-data":{
        "delta-crdt":{
          "enabled":"on",
          "max-delta-size":200
        },
        "durable":{
          "keys":[],
          "lmdb":{
            "dir":"ddata",
            "map-size":"100 MiB",
            "write-behind-interval":"off"
          },
          "pinned-store":{
            "executor":"thread-pool-executor",
            "type":"PinnedDispatcher"
          },
          "pruning-marker-time-to-live":"10 d",
          "store-actor-class":"akka.cluster.ddata.LmdbDurableStore",
          "use-dispatcher":"akka.cluster.distributed-data.durable.pinned-store"
        },
        "gossip-interval":"2 s",
        "max-delta-elements":1000,
        "max-pruning-dissemination":"300 s",
        "name":"ddataReplicator",
        "notify-subscribers-interval":"500 ms",
        "pruning-interval":"120 s",
        "pruning-marker-time-to-live":"6 h",
        "role":"",
        "serializer-cache-time-to-live":"10s",
        "use-dispatcher":""
      },
      "down-removal-margin":"off",
      "downing-provider-class":"",
      "failure-detector":{
        "acceptable-heartbeat-pause":"5 s",
        "expected-response-after":"1 s",
        "heartbeat-interval":"1 s",
        "implementation-class":"akka.remote.PhiAccrualFailureDetector",
        "max-sample-size":1000,
        "min-std-deviation":"100 ms",
        "monitored-by-nr-of-members":5,
        "threshold":8
      },
      "gossip-different-view-probability":0.8,
      "gossip-interval":"1s",
      "gossip-time-to-live":"2s",
      "jmx":{
        "enabled":"on",
        "multi-mbeans-in-same-jvm":"on"
      },
      "leader-actions-interval":"1s",
      "log-info":"on",
      "metrics":{
        "enabled":"off"
      },
      "min-nr-of-members":1,
      "multi-data-center":{
        "cross-data-center-connections":5,
        "cross-data-center-gossip-probability":0.2,
        "failure-detector":{
          "acceptable-heartbeat-pause":"10 s",
          "expected-response-after":"1 s",
          "heartbeat-interval":"3 s",
          "implementation-class":"akka.remote.DeadlineFailureDetector"
        },
        "self-data-center":"default"
      },
      "periodic-tasks-initial-delay":"1s",
      "prune-gossip-tombstones-after":"24h",
      "pub-sub":{
        "gossip-interval":"1s",
        "max-delta-elements":3000,
        "name":"distributedPubSubMediator",
        "removed-time-to-live":"120s",
        "role":"",
        "routing-logic":"random",
        "send-to-dead-letters-when-no-subscribers":"on",
        "use-dispatcher":""
      },
      "publish-stats-interval":"off",
      "quarantine-removed-node-after":"30s",
      "reduce-gossip-different-view-probability":400,
      "retry-unsuccessful-join-after":"10s",
      "role":{

      },
      "roles":[],
      "run-coordinated-shutdown-when-down":"on",
      "scheduler":{
        "tick-duration":"33ms",
        "ticks-per-wheel":512
      },
      "seed-node-timeout":"5s",
      "seed-nodes":[],
      "sharding":{
        "buffer-size":100000,
        "coordinator-failure-backoff":"5 s",
        "coordinator-singleton":{
          "hand-over-retry-interval":"1s",
          "min-number-of-hand-over-retries":10,
          "role":"",
          "singleton-name":"singleton"
        },
        "distributed-data":{
          "delta-crdt":{
            "enabled":"on",
            "max-delta-size":200
          },
          "durable":{
            "keys":[],
            "lmdb":{
              "dir":"ddata",
              "map-size":"100 MiB",
              "write-behind-interval":"off"
            },
            "pinned-store":{
              "executor":"thread-pool-executor",
              "type":"PinnedDispatcher"
            },
            "pruning-marker-time-to-live":"10 d",
            "store-actor-class":"akka.cluster.ddata.LmdbDurableStore",
            "use-dispatcher":"akka.cluster.distributed-data.durable.pinned-store"
          },
          "gossip-interval":"2 s",
          "majority-min-cap":5,
          "max-delta-elements":5,
          "max-pruning-dissemination":"300 s",
          "name":"ddataReplicator",
          "notify-subscribers-interval":"500 ms",
          "pruning-interval":"120 s",
          "pruning-marker-time-to-live":"6 h",
          "role":"",
          "serializer-cache-time-to-live":"10s",
          "use-dispatcher":""
        },
        "entity-recovery-constant-rate-strategy":{
          "frequency":"100 ms",
          "number-of-entities":5
        },
        "entity-recovery-strategy":"all",
        "entity-restart-backoff":"10 s",
        "guardian-name":"sharding",
        "handoff-timeout":"60 s",
        "journal-plugin-id":"",
        "keep-nr-of-batches":2,
        "least-shard-allocation-strategy":{
          "max-simultaneous-rebalance":3,
          "rebalance-threshold":10
        },
        "rebalance-interval":"10 s",
        "remember-entities":"off",
        "retry-interval":"2 s",
        "role":"",
        "shard-failure-backoff":"10 s",
        "shard-start-timeout":"10 s",
        "snapshot-after":1000,
        "snapshot-plugin-id":"",
        "state-store-mode":"ddata",
        "updating-state-timeout":"5 s",
        "use-dispatcher":"",
        "waiting-for-state-timeout":"5 s"
      },
      "shutdown-after-unsuccessful-join-seed-nodes":"off",
      "singleton":{
        "hand-over-retry-interval":"1s",
        "min-number-of-hand-over-retries":10,
        "role":"",
        "singleton-name":"singleton"
      },
      "singleton-proxy":{
        "buffer-size":1000,
        "role":"",
        "singleton-identification-interval":"1s",
        "singleton-name":"singleton"
      },
      "split-brain-resolver":{
        "active-strategy":"keep-majority"
      },
      "unreachable-nodes-reaper-interval":"1s",
      "use-dispatcher":""
    },
    "coordinated-shutdown":{
      "default-phase-timeout":"5 s",
      "exit-jvm":"off",
      "phases":{
        "actor-system-terminate":{
          "depends-on":["before-actor-system-terminate"],
          "timeout":"10 s"
        },
        "before-actor-system-terminate":{
          "depends-on":["cluster-shutdown"]
        },
        "before-cluster-shutdown":{
          "depends-on":["service-stop"]
        },
        "before-service-unbind":{

        },
        "cluster-exiting":{
          "depends-on":["cluster-leave"],
          "timeout":"10 s"
        },
        "cluster-exiting-done":{
          "depends-on":["cluster-exiting"]
        },
        "cluster-leave":{
          "depends-on":["cluster-sharding-shutdown-region"]
        },
        "cluster-sharding-shutdown-region":{
          "depends-on":["before-cluster-shutdown"],
          "timeout":"10 s"
        },
        "cluster-shutdown":{
          "depends-on":["cluster-exiting-done"]
        },
        "service-requests-done":{
          "depends-on":["service-unbind"]
        },
        "service-stop":{
          "depends-on":["service-requests-done"]
        },
        "service-unbind":{
          "depends-on":["before-service-unbind"]
        }
      },
      "run-by-jvm-shutdown-hook":"off",
      "terminate-actor-system":"on"
    },
    "daemonic":"off",
    "extensions":[],
    "home":"",
    "http":{
      "client":{
        "connecting-timeout":"10s",
        "idle-timeout":"60 s",
        "log-unencrypted-network-bytes":"off",
        "parsing":{

        },
        "request-header-size-hint":512,
        "socket-options":{
          "so-receive-buffer-size":"undefined",
          "so-reuse-address":"undefined",
          "so-send-buffer-size":"undefined",
          "so-traffic-class":"undefined",
          "tcp-keep-alive":"undefined",
          "tcp-no-delay":"undefined",
          "tcp-oob-inline":"undefined"
        },
        "user-agent-header":"akka-http/10.0.11"
      },
      "host-connection-pool":{
        "client":{

        },
        "idle-timeout":"30 s",
        "max-connections":4,
        "max-open-requests":32,
        "max-retries":5,
        "min-connections":0,
        "pipelining-limit":1,
        "pool-implementation":"legacy",
        "response-entity-subscription-timeout":"1.second"
      },
      "parsing":{
        "cookie-parsing-mode":"rfc6265",
        "error-logging-verbosity":"full",
        "header-cache":{
          "Content-MD5":0,
          "Date":0,
          "If-Match":0,
          "If-Modified-Since":0,
          "If-None-Match":0,
          "If-Range":0,
          "If-Unmodified-Since":0,
          "User-Agent":32,
          "default":12
        },
        "illegal-header-warnings":"on",
        "illegal-response-header-value-processing-mode":"error",
        "max-chunk-ext-length":256,
        "max-chunk-size":"1m",
        "max-content-length":"8m",
        "max-header-count":64,
        "max-header-name-length":64,
        "max-header-value-length":"8k",
        "max-method-length":16,
        "max-response-reason-length":64,
        "max-uri-length":"2k",
        "modeled-header-parsing":"on",
        "tls-session-info-header":"off",
        "uri-parsing-mode":"strict"
      },
      "server":{
        "backlog":100,
        "bind-timeout":"1s",
        "default-host-header":"",
        "default-http-port":80,
        "default-https-port":443,
        "http2":{
          "incoming-connection-level-buffer-size":"10 MB",
          "incoming-stream-level-buffer-size":"512kB",
          "request-entity-chunk-size":"65536 b"
        },
        "idle-timeout":"60 s",
        "linger-timeout":"1 min",
        "log-unencrypted-network-bytes":"off",
        "max-connections":1024,
        "parsing":{

        },
        "pipelining-limit":16,
        "preview":{
          "enable-http2":"off"
        },
        "raw-request-uri-header":"off",
        "remote-address-header":"off",
        "request-timeout":"20 s",
        "response-header-size-hint":512,
        "server-header":"akka-http/10.0.11",
        "socket-options":{
          "so-receive-buffer-size":"undefined",
          "so-reuse-address":"undefined",
          "so-send-buffer-size":"undefined",
          "so-traffic-class":"undefined",
          "tcp-keep-alive":"undefined",
          "tcp-no-delay":"undefined",
          "tcp-oob-inline":"undefined"
        },
        "transparent-head-requests":"on",
        "verbose-error-messages":"off"
      },
      "version":"10.0.11"
    },
    "io":{
      "dns":{
        "dispatcher":"akka.actor.default-dispatcher",
        "inet-address":{
          "cache-cleanup-interval":"120s",
          "negative-ttl":"default",
          "positive-ttl":"default",
          "provider-object":"akka.io.InetAddressDnsProvider"
        },
        "resolver":"inet-address"
      },
      "pinned-dispatcher":{
        "executor":"thread-pool-executor",
        "thread-pool-executor":{
          "allow-core-timeout":"off"
        },
        "type":"PinnedDispatcher"
      },
      "tcp":{
        "batch-accept-limit":10,
        "direct-buffer-pool-limit":1000,
        "direct-buffer-size":"128 KiB",
        "file-io-dispatcher":"akka.actor.default-blocking-io-dispatcher",
        "file-io-transferTo-limit":"512 KiB",
        "finish-connect-retries":5,
        "management-dispatcher":"akka.actor.default-dispatcher",
        "max-channels":256000,
        "max-received-message-size":"unlimited",
        "nr-of-selectors":1,
        "register-timeout":"5s",
        "selector-association-retries":10,
        "selector-dispatcher":"akka.io.pinned-dispatcher",
        "trace-logging":"off",
        "windows-connection-abort-workaround-enabled":"off",
        "worker-dispatcher":"akka.actor.default-dispatcher"
      },
      "udp":{
        "direct-buffer-pool-limit":1000,
        "direct-buffer-size":"128 KiB",
        "management-dispatcher":"akka.actor.default-dispatcher",
        "max-channels":4096,
        "nr-of-selectors":1,
        "receive-throughput":3,
        "select-timeout":"infinite",
        "selector-association-retries":10,
        "selector-dispatcher":"akka.io.pinned-dispatcher",
        "trace-logging":"off",
        "worker-dispatcher":"akka.actor.default-dispatcher"
      },
      "udp-connected":{
        "direct-buffer-pool-limit":1000,
        "direct-buffer-size":"128 KiB",
        "management-dispatcher":"akka.actor.default-dispatcher",
        "max-channels":4096,
        "nr-of-selectors":1,
        "receive-throughput":3,
        "select-timeout":"infinite",
        "selector-association-retries":10,
        "selector-dispatcher":"akka.io.pinned-dispatcher",
        "trace-logging":"off",
        "worker-dispatcher":"akka.actor.default-dispatcher"
      }
    },
    "jvm-exit-on-fatal-error":true,
    "jvm-shutdown-hooks":"off",
    "library-extensions":["akka.serialization.SerializationExtension"],
    "log-config-on-start":"off",
    "log-dead-letters":"off",
    "log-dead-letters-during-shutdown":"on",
    "logger-startup-timeout":"5s",
    "loggers":["akka.event.slf4j.Slf4jLogger"],
    "loggers-dispatcher":"akka.actor.default-dispatcher",
    "logging-filter":"akka.event.slf4j.Slf4jLoggingFilter",
    "loglevel":"DEBUG",
    "persistence":{
      "at-least-once-delivery":{
        "max-unconfirmed-messages":100000,
        "redeliver-interval":"5s",
        "redelivery-burst-limit":10000,
        "warn-after-number-of-unconfirmed-attempts":5
      },
      "dispatchers":{
        "default-plugin-dispatcher":{
          "executor":"thread-pool-executor",
          "type":"PinnedDispatcher"
        },
        "default-replay-dispatcher":{
          "executor":"fork-join-executor",
          "fork-join-executor":{
            "parallelism-max":8,
            "parallelism-min":2
          },
          "type":"Dispatcher"
        },
        "default-stream-dispatcher":{
          "executor":"fork-join-executor",
          "fork-join-executor":{
            "parallelism-max":8,
            "parallelism-min":2
          },
          "type":"Dispatcher"
        }
      },
      "fsm":{
        "snapshot-after":"off"
      },
      "internal-stash-overflow-strategy":"akka.persistence.ThrowExceptionConfigurator",
      "journal":{
        "auto-start-journals":[],
        "inmem":{
          "class":"akka.persistence.journal.inmem.InmemJournal",
          "plugin-dispatcher":"akka.actor.default-dispatcher"
        },
        "leveldb":{
          "checksum":"off",
          "class":"akka.persistence.journal.leveldb.LeveldbJournal",
          "compaction-intervals":{

          },
          "dir":"journal",
          "fsync":"on",
          "native":"on",
          "plugin-dispatcher":"akka.persistence.dispatchers.default-plugin-dispatcher",
          "replay-dispatcher":"akka.persistence.dispatchers.default-replay-dispatcher"
        },
        "leveldb-shared":{
          "class":"akka.persistence.journal.leveldb.SharedLeveldbJournal",
          "plugin-dispatcher":"akka.actor.default-dispatcher",
          "store":{
            "checksum":"off",
            "compaction-intervals":{

            },
            "dir":"journal",
            "fsync":"on",
            "native":"on",
            "replay-dispatcher":"akka.persistence.dispatchers.default-replay-dispatcher",
            "store-dispatcher":"akka.persistence.dispatchers.default-plugin-dispatcher"
          },
          "timeout":"10s"
        },
        "plugin":"cassandra-journal",
        "proxy":{
          "class":"akka.persistence.journal.PersistencePluginProxy",
          "init-timeout":"10s",
          "plugin-dispatcher":"akka.actor.default-dispatcher",
          "start-target-journal":"off",
          "target-journal-address":"",
          "target-journal-plugin":""
        }
      },
      "journal-plugin-fallback":{
        "circuit-breaker":{
          "call-timeout":"10s",
          "max-failures":10,
          "reset-timeout":"30s"
        },
        "class":"",
        "max-message-batch-size":200,
        "plugin-dispatcher":"akka.persistence.dispatchers.default-plugin-dispatcher",
        "recovery-event-timeout":"30s",
        "replay-dispatcher":"akka.persistence.dispatchers.default-replay-dispatcher",
        "replay-filter":{
          "debug":"off",
          "max-old-writers":10,
          "mode":"repair-by-discard-old",
          "window-size":100
        }
      },
      "max-concurrent-recoveries":50,
      "no-snapshot-store":{
        "class":"akka.persistence.snapshot.NoSnapshotStore"
      },
      "query":{
        "journal":{
          "leveldb":{
            "class":"akka.persistence.query.journal.leveldb.LeveldbReadJournalProvider",
            "max-buffer-size":100,
            "refresh-interval":"3s",
            "write-plugin":""
          }
        }
      },
      "snapshot-store":{
        "auto-start-snapshot-stores":[],
        "local":{
          "class":"akka.persistence.snapshot.local.LocalSnapshotStore",
          "dir":"snapshots",
          "max-load-attempts":3,
          "plugin-dispatcher":"akka.persistence.dispatchers.default-plugin-dispatcher",
          "stream-dispatcher":"akka.persistence.dispatchers.default-stream-dispatcher"
        },
        "plugin":"cassandra-snapshot-store",
        "proxy":{
          "class":"akka.persistence.journal.PersistencePluginProxy",
          "init-timeout":"10s",
          "plugin-dispatcher":"akka.actor.default-dispatcher",
          "start-target-snapshot-store":"off",
          "target-snapshot-store-address":"",
          "target-snapshot-store-plugin":""
        }
      },
      "snapshot-store-plugin-fallback":{
        "circuit-breaker":{
          "call-timeout":"20s",
          "max-failures":5,
          "reset-timeout":"60s"
        },
        "class":"",
        "plugin-dispatcher":"akka.persistence.dispatchers.default-plugin-dispatcher"
      }
    },
    "remote":{
      "adapters":{
        "gremlin":"akka.remote.transport.FailureInjectorProvider",
        "trttl":"akka.remote.transport.ThrottlerProvider"
      },
      "artery":{
        "advanced":{
          "aeron-dir":"",
          "buffer-pool-size":128,
          "client-liveness-timeout":"20 seconds",
          "compression":{
            "actor-refs":{
              "advertisement-interval":"1 minute",
              "max":256
            },
            "manifests":{
              "advertisement-interval":"1 minute",
              "max":256
            }
          },
          "connection-timeout":"5 seconds",
          "delete-aeron-dir":"yes",
          "driver-timeout":"20 seconds",
          "embedded-media-driver":"on",
          "flight-recorder":{
            "destination":"",
            "enabled":"off"
          },
          "give-up-message-after":"60 seconds",
          "give-up-system-message-after":"6 hours",
          "handshake-retry-interval":"1 second",
          "handshake-timeout":"20 seconds",
          "idle-cpu-level":5,
          "image-liveness-timeout":"10 seconds",
          "inbound-lanes":4,
          "inbound-max-restarts":5,
          "inbound-restart-timeout":"5 seconds",
          "inject-handshake-interval":"1 second",
          "instruments":[],
          "large-buffer-pool-size":32,
          "materializer":{
            "auto-fusing":"on",
            "blocking-io-dispatcher":"akka.stream.default-blocking-io-dispatcher",
            "debug":{
              "fuzzing-mode":"off"
            },
            "debug-logging":"off",
            "dispatcher":"",
            "initial-input-buffer-size":4,
            "io":{
              "tcp":{
                "write-buffer-size":"16 KiB"
              }
            },
            "max-fixed-buffer-size":1000000000,
            "max-input-buffer-size":16,
            "output-burst-limit":1000,
            "stream-ref":{
              "buffer-capacity":32,
              "demand-redelivery-interval":"1 second",
              "subscription-timeout":"30 seconds"
            },
            "subscription-timeout":{
              "mode":"cancel",
              "timeout":"5s"
            },
            "sync-processing-limit":1000
          },
          "maximum-frame-size":"256 KiB",
          "maximum-large-frame-size":"2 MiB",
          "outbound-control-queue-size":3072,
          "outbound-lanes":1,
          "outbound-large-message-queue-size":256,
          "outbound-max-restarts":5,
          "outbound-message-queue-size":3072,
          "outbound-restart-backoff":"1 second",
          "outbound-restart-timeout":"5 seconds",
          "remove-quarantined-association-after":"1 h",
          "shutdown-flush-timeout":"1 second",
          "stop-idle-outbound-after":"5.minutes",
          "stop-quarantined-after-idle":"3 seconds",
          "system-message-buffer-size":20000,
          "system-message-resend-interval":"1 second",
          "test-mode":"off",
          "use-control-stream-dispatcher":"",
          "use-dispatcher":"akka.remote.default-remote-dispatcher"
        },
        "bind":{
          "bind-timeout":"3s",
          "hostname":"",
          "port":""
        },
        "canonical":{
          "hostname":"<getHostAddress>",
          "port":25520
        },
        "enabled":"off",
        "large-message-destinations":[],
        "log-aeron-counters":false,
        "log-received-messages":"off",
        "log-sent-messages":"off",
        "ssl":{
          "config-ssl-engine":{
            "enabled-algorithms":["TLS_RSA_WITH_AES_128_CBC_SHA"],
            "hostname-verification":"off",
            "key-password":"changeme",
            "key-store":"keystore",
            "key-store-password":"changeme",
            "protocol":"TLSv1.2",
            "random-number-generator":"",
            "require-mutual-authentication":"on",
            "trust-store":"truststore",
            "trust-store-password":"changeme"
          },
          "ssl-engine-provider":"akka.remote.artery.tcp.ConfigSSLEngineProvider"
        },
        "transport":"aeron-udp",
        "trusted-selection-paths":[],
        "untrusted-mode":"off"
      },
      "backoff-interval":"5 ms",
      "backoff-remote-dispatcher":{
        "executor":"fork-join-executor",
        "fork-join-executor":{
          "parallelism-max":2,
          "parallelism-min":2
        },
        "type":"Dispatcher"
      },
      "command-ack-timeout":"30 s",
      "default-remote-dispatcher":{
        "executor":"fork-join-executor",
        "fork-join-executor":{
          "parallelism-factor":0.5,
          "parallelism-max":16,
          "parallelism-min":2
        },
        "throughput":10,
        "type":"Dispatcher"
      },
      "deployment":{
        "enable-whitelist":"off",
        "whitelist":[]
      },
      "enabled-transports":["akka.remote.netty.tcp"],
      "flush-wait-on-shutdown":"2 s",
      "gremlin":{
        "debug":"off"
      },
      "handshake-timeout":"15 s",
      "initial-system-message-delivery-timeout":"3 m",
      "log-buffer-size-exceeding":50000,
      "log-frame-size-exceeding":"off",
      "log-received-messages":"off",
      "log-remote-lifecycle-events":"on",
      "log-sent-messages":"off",
      "netty":{
        "ssl":{
          "applied-adapters":[],
          "backlog":4096,
          "bind-hostname":"",
          "bind-port":"",
          "client-socket-worker-pool":{
            "pool-size-factor":1,
            "pool-size-max":2,
            "pool-size-min":2
          },
          "connection-timeout":"15 s",
          "enable-ssl":true,
          "hostname":"127.0.0.1",
          "maximum-frame-size":"128000b",
          "port":0,
          "receive-buffer-size":"256000b",
          "security":{
            "enabled-algorithms":["TLS_RSA_WITH_AES_128_CBC_SHA"],
            "key-password":"changeme",
            "key-store":"keystore",
            "key-store-password":"changeme",
            "protocol":"TLSv1.2",
            "random-number-generator":"",
            "require-mutual-authentication":"on",
            "trust-store":"truststore",
            "trust-store-password":"changeme"
          },
          "send-buffer-size":"256000b",
          "server-socket-worker-pool":{
            "pool-size-factor":1,
            "pool-size-max":2,
            "pool-size-min":2
          },
          "tcp-keepalive":"on",
          "tcp-nodelay":"on",
          "tcp-reuse-addr":"off-for-windows",
          "transport-class":"akka.remote.transport.netty.NettyTransport",
          "transport-protocol":"tcp",
          "use-dispatcher-for-io":"",
          "write-buffer-high-water-mark":"0b",
          "write-buffer-low-water-mark":"0b"
        },
        "tcp":{
          "applied-adapters":[],
          "backlog":4096,
          "bind-hostname":"",
          "bind-port":"",
          "client-socket-worker-pool":{
            "pool-size-factor":1,
            "pool-size-max":2,
            "pool-size-min":2
          },
          "connection-timeout":"15 s",
          "enable-ssl":false,
          "hostname":"127.0.0.1",
          "maximum-frame-size":"128000b",
          "port":0,
          "receive-buffer-size":"256000b",
          "send-buffer-size":"256000b",
          "server-socket-worker-pool":{
            "pool-size-factor":1,
            "pool-size-max":2,
            "pool-size-min":2
          },
          "tcp-keepalive":"on",
          "tcp-nodelay":"on",
          "tcp-reuse-addr":"off-for-windows",
          "transport-class":"akka.remote.transport.netty.NettyTransport",
          "transport-protocol":"tcp",
          "use-dispatcher-for-io":"",
          "write-buffer-high-water-mark":"0b",
          "write-buffer-low-water-mark":"0b"
        },
        "udp":{
          "applied-adapters":[],
          "backlog":4096,
          "bind-hostname":"",
          "bind-port":"",
          "client-socket-worker-pool":{
            "pool-size-factor":1,
            "pool-size-max":2,
            "pool-size-min":2
          },
          "connection-timeout":"15 s",
          "enable-ssl":false,
          "hostname":"127.0.0.1",
          "maximum-frame-size":"128000b",
          "port":0,
          "receive-buffer-size":"256000b",
          "send-buffer-size":"256000b",
          "server-socket-worker-pool":{
            "pool-size-factor":1,
            "pool-size-max":2,
            "pool-size-min":2
          },
          "tcp-keepalive":"on",
          "tcp-nodelay":"on",
          "tcp-reuse-addr":"off-for-windows",
          "transport-class":"akka.remote.transport.netty.NettyTransport",
          "transport-protocol":"udp",
          "use-dispatcher-for-io":"",
          "write-buffer-high-water-mark":"0b",
          "write-buffer-low-water-mark":"0b"
        }
      },
      "prune-quarantine-marker-after":"5 d",
      "quarantine-after-silence":"2 d",
      "require-cookie":"off",
      "resend-interval":"2 s",
      "resend-limit":200,
      "retry-gate-closed-for":"5 s",
      "secure-cookie":"",
      "shutdown-timeout":"10 s",
      "startup-timeout":"10 s",
      "system-message-ack-piggyback-timeout":"0.3 s",
      "system-message-buffer-size":20000,
      "transport-failure-detector":{
        "acceptable-heartbeat-pause":"120 s",
        "heartbeat-interval":"4 s",
        "implementation-class":"akka.remote.DeadlineFailureDetector"
      },
      "trusted-selection-paths":[],
      "untrusted-mode":"off",
      "use-dispatcher":"akka.remote.default-remote-dispatcher",
      "use-passive-connections":"on",
      "watch-failure-detector":{
        "acceptable-heartbeat-pause":"10 s",
        "expected-response-after":"1 s",
        "heartbeat-interval":"1 s",
        "implementation-class":"akka.remote.PhiAccrualFailureDetector",
        "max-sample-size":200,
        "min-std-deviation":"100 ms",
        "threshold":10,
        "unreachable-nodes-reaper-interval":"1s"
      }
    },
    "scheduler":{
      "implementation":"akka.actor.LightArrayRevolverScheduler",
      "shutdown-timeout":"5s",
      "tick-duration":"10ms",
      "ticks-per-wheel":512
    },
    "ssl-config":{
      "protocol":"TLSv1.2"
    },
    "stdout-loglevel":"WARNING",
    "stream":{
      "blocking-io-dispatcher":"akka.stream.default-blocking-io-dispatcher",
      "default-blocking-io-dispatcher":{
        "executor":"thread-pool-executor",
        "thread-pool-executor":{
          "fixed-pool-size":16
        },
        "throughput":1,
        "type":"Dispatcher"
      },
      "materializer":{
        "auto-fusing":"on",
        "blocking-io-dispatcher":"akka.stream.default-blocking-io-dispatcher",
        "debug":{
          "fuzzing-mode":"off"
        },
        "debug-logging":"off",
        "dispatcher":"",
        "initial-input-buffer-size":4,
        "io":{
          "tcp":{
            "write-buffer-size":"16 KiB"
          }
        },
        "max-fixed-buffer-size":1000000000,
        "max-input-buffer-size":16,
        "output-burst-limit":1000,
        "stream-ref":{
          "buffer-capacity":32,
          "demand-redelivery-interval":"1 second",
          "subscription-timeout":"30 seconds"
        },
        "subscription-timeout":{
          "mode":"cancel",
          "timeout":"5s"
        },
        "sync-processing-limit":1000
      }
    },
    "test":{
      "calling-thread-dispatcher":{
        "type":"akka.testkit.CallingThreadDispatcherConfigurator"
      },
      "default-timeout":"5s",
      "filter-leeway":"3s",
      "single-expect-default":"3s",
      "timefactor":1
    },
    "version":"2.5.11"
  },
  "awt":{
    "toolkit":"sun.lwawt.macosx.LWCToolkit"
  },
  "cassandra-journal":{
    "authentication":{
      "password":"",
      "username":""
    },
    "cassandra-2x-compat":"off",
    "class":"akka.persistence.cassandra.journal.CassandraJournal",
    "cluster-id":"cas_native",
    "config-table":"config",
    "connect-retries":3,
    "connect-retry-delay":"1s",
    "connection-pool":{
      "connections-per-host-core-local":1,
      "connections-per-host-core-remote":1,
      "connections-per-host-max-local":4,
      "connections-per-host-max-remote":4,
      "max-requests-per-connection-local":32768,
      "max-requests-per-connection-remote":2000,
      "new-connection-threshold-local":800,
      "new-connection-threshold-remote":200,
      "pool-timeout-millis":0
    },
    "contact-points":["127.0.0.1"],
    "data-center-replication-factors":[],
    "defaults":{
      "port":"4000"
    },
    "delete-retries":3,
    "enable-events-by-tag-query":"on",
    "events-by-tag-view":"eventsbytag",
    "gc-grace-seconds":864000,
    "keyspace":"iam",
    "keyspace-autocreate":true,
    "local-datacenter":"",
    "log-queries":"off",
    "max-message-batch-size":100,
    "max-result-size":250,
    "max-result-size-replay":250,
    "meta-in-events-by-tag-view":"off",
    "metadata-table":"metadata",
    "plugin-dispatcher":"lagom.persistence.dispatcher",
    "port":"4000",
    "protocol-version":"",
    "pubsub-minimum-interval":"off",
    "query-plugin":"cassandra-query-journal",
    "read-consistency":"QUORUM",
    "read-retries":3,
    "reconnect-max-delay":"30s",
    "replication-factor":1,
    "replication-strategy":"SimpleStrategy",
    "session-provider":"com.lightbend.lagom.internal.persistence.cassandra.ServiceLocatorSessionProvider",
    "socket":{
      "connection-timeout-millis":5000,
      "read-timeout-millis":12000,
      "receive-buffer-size":0,
      "send-buffer-size":0
    },
    "speculative-executions":0,
    "speculative-executions-delay":"1s",
    "ssl":{
      "keystore":{
        "password":"",
        "path":""
      },
      "truststore":{
        "password":"",
        "path":""
      }
    },
    "table":"messages",
    "table-compaction-strategy":{
      "class":"SizeTieredCompactionStrategy"
    },
    "tables-autocreate":true,
    "tags":{

    },
    "target-partition-size":500000,
    "used-hosts-per-remote-dc":0,
    "write-consistency":"QUORUM",
    "write-retries":3
  },
  "cassandra-plugin-default-dispatcher":{
    "executor":"fork-join-executor",
    "fork-join-executor":{
      "parallelism-factor":0.5,
      "parallelism-max":8,
      "parallelism-min":2
    },
    "type":"Dispatcher"
  },
  "cassandra-query-journal":{
    "class":"akka.persistence.cassandra.query.CassandraReadJournalProvider",
    "delayed-event-timeout":"0s",
    "events-by-persistence-id-gap-timeout":"10s",
    "eventual-consistency-delay":"10s",
    "fetch-more-threshold":0.2,
    "first-time-bucket":"20160225",
    "gap-free-sequence-numbers":"on",
    "max-buffer-size":500,
    "max-result-size-query":250,
    "plugin-dispatcher":"lagom.persistence.dispatcher",
    "read-consistency":"QUORUM",
    "read-retries":3,
    "refresh-interval":"3s",
    "speculative-executions":0,
    "speculative-executions-delay":"1s",
    "write-plugin":"cassandra-journal"
  },
  "cassandra-snapshot-store":{
    "authentication":{
      "password":"",
      "username":""
    },
    "class":"akka.persistence.cassandra.snapshot.CassandraSnapshotStore",
    "cluster-id":"cas_native",
    "config-table":"config",
    "connect-retries":3,
    "connect-retry-delay":"1s",
    "connection-pool":{
      "connections-per-host-core-local":1,
      "connections-per-host-core-remote":1,
      "connections-per-host-max-local":4,
      "connections-per-host-max-remote":4,
      "max-requests-per-connection-local":32768,
      "max-requests-per-connection-remote":2000,
      "new-connection-threshold-local":50,
      "new-connection-threshold-remote":50,
      "pool-timeout-millis":0
    },
    "contact-points":["127.0.0.1"],
    "data-center-replication-factors":[],
    "defaults":{
      "port":"4000"
    },
    "delete-retries":3,
    "gc-grace-seconds":864000,
    "keyspace":"iam",
    "keyspace-autocreate":true,
    "local-datacenter":"",
    "log-queries":"off",
    "max-load-attempts":3,
    "max-result-size":50001,
    "metadata-table":"metadata",
    "plugin-dispatcher":"lagom.persistence.dispatcher",
    "port":"4000",
    "protocol-version":"",
    "read-consistency":"ONE",
    "read-retries":3,
    "reconnect-max-delay":"30s",
    "replication-factor":1,
    "replication-strategy":"SimpleStrategy",
    "session-provider":"com.lightbend.lagom.internal.persistence.cassandra.ServiceLocatorSessionProvider",
    "socket":{
      "connection-timeout-millis":5000,
      "read-timeout-millis":12000,
      "receive-buffer-size":0,
      "send-buffer-size":0
    },
    "speculative-executions":0,
    "speculative-executions-delay":"1s",
    "ssl":{
      "keystore":{
        "password":"",
        "path":""
      },
      "truststore":{
        "password":"",
        "path":""
      }
    },
    "table":"snapshots",
    "table-compaction-strategy":{
      "class":"SizeTieredCompactionStrategy"
    },
    "tables-autocreate":true,
    "used-hosts-per-remote-dc":0,
    "write-consistency":"ONE",
    "write-retries":3
  },
  "file":{
    "encoding":{
      "pkg":"sun.io"
    },
    "separator":"/"
  },
  "ftp":{
    "nonProxyHosts":"local|*.local|169.254/16|*.169.254/16"
  },
  "gopherProxySet":"false",
  "http":{
    "nonProxyHosts":"local|*.local|169.254/16|*.169.254/16"
  },
  "iam":{
    "cassandra":{
      "keyspace":"iam"
    }
  },
  "java":{
    "awt":{
      "graphicsenv":"sun.awt.CGraphicsEnvironment",
      "printerjob":"sun.lwawt.macosx.CPrinterJob"
    },
    "class":{
      "path":"/Users/nrm/Library/Application Support/IdeaIC2018.1/Scala/launcher/sbt-launch.jar:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar:/Users/nrm/Library/Caches/IdeaIC2018.1/captureAgent/debugger-agent.jar",
      "version":"52.0"
    },
    "endorsed":{
      "dirs":"/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre/lib/endorsed"
    },
    "ext":{
      "dirs":"/Users/nrm/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"
    },
    "home":"/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre",
    "io":{
      "tmpdir":"/var/folders/lh/rdl1gz9n1w3c60p9wqy1_4j40000gn/T/"
    },
    "library":{
      "path":"/Users/nrm/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."
    },
    "runtime":{
      "name":"Java(TM) SE Runtime Environment",
      "version":"1.8.0_161-b12"
    },
    "specification":{
      "name":"Java Platform API Specification",
      "vendor":"Oracle Corporation",
      "version":"1.8"
    },
    "vendor":{
      "url":{
        "bug":"http://bugreport.sun.com/bugreport/"
      }
    },
    "version":"1.8.0_161",
    "vm":{
      "info":"mixed mode",
      "name":"Java HotSpot(TM) 64-Bit Server VM",
      "specification":{
        "name":"Java Virtual Machine Specification",
        "vendor":"Oracle Corporation",
        "version":"1.8"
      },
      "vendor":"Oracle Corporation",
      "version":"25.161-b12"
    }
  },
  "jboss":{
    "modules":{
      "system":{
        "pkgs":"com.intellij.rt"
      }
    }
  },
  "jline":{
    "esc":{
      "timeout":"0"
    },
    "shutdownhook":"false"
  },
  "jna":{
    "loaded":"true",
    "nosys":"true",
    "platform":{
      "library":{
        "path":"/usr/lib:/usr/lib"
      }
    }
  },
  "jnidispatch":{
    "path":"/var/folders/lh/rdl1gz9n1w3c60p9wqy1_4j40000gn/T/jna-109353/jna7055079501872530858.tmp"
  },
  "lagom":{
    "akka":{
      "dev-mode":{
        "actor-system":{
          "name":"iam-impl-internal-dev-mode"
        },
        "config":{
          "akka":{
            "actor":{
              "provider":"akka.actor.LocalActorRefProvider"
            }
          },
          "http":{
            "server":{
              "transparent-head-requests":false
            }
          },
          "log-dead-letters":"off"
        }
      }
    },
    "circuit-breaker":{
      "default":{
        "call-timeout":"10s",
        "enabled":"on",
        "exception-whitelist":[],
        "max-failures":10,
        "reset-timeout":"15s"
      }
    },
    "client":{
      "websocket":{
        "frame":{
          "maxLength":65536
        }
      }
    },
    "cluster":{
      "exit-jvm-when-system-terminated":"off",
      "join-self":"on"
    },
    "defaults":{
      "cluster":{
        "join-self":"on"
      },
      "persistence":{
        "read-side":{
          "cassandra":{
            "port":"4000"
          }
        }
      }
    },
    "persistence":{
      "ask-timeout":"5s",
      "cluster":{
        "distribution":{
          "ensure-active-interval":"30s"
        }
      },
      "dispatcher":{
        "executor":"thread-pool-executor",
        "thread-pool-executor":{
          "fixed-pool-size":16
        },
        "throughput":1,
        "type":"Dispatcher"
      },
      "max-number-of-shards":100,
      "passivate-after-idle-timeout":"120s",
      "read-side":{
        "cassandra":{
          "authentication":{
            "password":"",
            "username":""
          },
          "cluster-id":"cas_native",
          "connect-retries":3,
          "connect-retry-delay":"1s",
          "connection-pool":{
            "connections-per-host-core-local":1,
            "connections-per-host-core-remote":1,
            "connections-per-host-max-local":4,
            "connections-per-host-max-remote":4,
            "max-requests-per-connection-local":32768,
            "max-requests-per-connection-remote":2000,
            "new-connection-threshold-local":800,
            "new-connection-threshold-remote":200,
            "pool-timeout-millis":0
          },
          "contact-points":["127.0.0.1"],
          "data-center-replication-factors":[],
          "delete-retries":3,
          "keyspace":"iam",
          "keyspace-autocreate":true,
          "local-datacenter":"",
          "log-queries":"off",
          "max-result-size":50001,
          "port":"4000",
          "protocol-version":"",
          "read-consistency":"QUORUM",
          "read-retries":3,
          "reconnect-max-delay":"30s",
          "replication-factor":1,
          "replication-strategy":"SimpleStrategy",
          "session-provider":"com.lightbend.lagom.internal.persistence.cassandra.ServiceLocatorSessionProvider",
          "socket":{
            "connection-timeout-millis":5000,
            "read-timeout-millis":12000,
            "receive-buffer-size":0,
            "send-buffer-size":0
          },
          "speculative-executions":0,
          "speculative-executions-delay":"1s",
          "ssl":{
            "keystore":{
              "password":"",
              "path":""
            },
            "truststore":{
              "password":"",
              "path":""
            }
          },
          "tables-autocreate":true,
          "used-hosts-per-remote-dc":0,
          "write-consistency":"QUORUM",
          "write-retries":3
        },
        "failure-exponential-backoff":{
          "max":"30s",
          "min":"3s",
          "random-factor":0.2
        },
        "global-prepare-timeout":"20s",
        "offset-timeout":"5s",
        "run-on-role":"",
        "use-dispatcher":"lagom.persistence.dispatcher"
      },
      "run-entities-on-role":"",
      "snapshot-after":100
    },
    "serialization":{
      "json":{
        "compress-larger-than":"1024b"
      }
    },
    "service-locator":{
      "url":"http://localhost:9008"
    },
    "spi":{
      "circuit-breaker-metrics-class":""
    }
  },
  "line":{
    "separator":"\n"
  },
  "os":{
    "arch":"x86_64",
    "name":"Mac OS X",
    "version":"10.13.4"
  },
  "path":{
    "separator":":"
  },
  "play":{
    "akka":{
      "actor-system":"iam-impl-application",
      "blockingIoDispatcher":{
        "fork-join-executor":{
          "parallelism-factor":3
        }
      },
      "config":"akka",
      "dev-mode":{
        "akka":{
          "log-dead-letters":"off"
        },
        "coordinated-shutdown":{
          "exit-jvm":"off",
          "run-by-jvm-shutdown-hook":"off",
          "terminate-actor-system":"on"
        },
        "http":{
          "server":{
            "transparent-head-requests":false
          }
        },
        "log-dead-letters":"off"
      },
      "run-cs-from-phase":"before-cluster-shutdown",
      "shutdown-timeout":"infinite"
    },
    "allowGlobalApplication":true,
    "application":{
      "loader":"mdpm.iam.impl.IamLoader"
    },
    "assets":{
      "aggressiveCache":"public, max-age=31536000, immutable",
      "checkForMinified":null,
      "default":{
        "charset":"utf-8"
      },
      "defaultCache":"public, max-age=3600",
      "digest":{
        "algorithm":"md5"
      },
      "encodings":[{
        "accept":"br",
        "extension":"br"
      },{
      "accept":"gzip",
      "extension":"gz"
      },{
      "accept":"xz",
      "extension":"xz"
      },{
      "accept":"bz2",
      "extension":"bz2"
      }],
      "path":"/public",
      "textContentTypes":["application/json",
        "application/javascript"],
        "urlPrefix":"/assets"
    },
    "filters":{
      "disabled":[]
    },
    "http":{
      "actionComposition":{
        "controllerAnnotationsFirst":false,
        "executeActionCreatorActionFirst":false
      },
      "actionCreator":null,
      "context":"/",
      "cookies":{
        "strict":true
      },
      "errorHandler":null,
      "fileMimeTypes":"\n        3dm=x-world/x-3dmf\n        3dmf=x-world/x-3dmf\n        7z=application/x-7z-compressed\n        a=application/octet-stream\n        aab=application/x-authorware-bin\n        aam=application/x-authorware-map\n        aas=application/x-authorware-seg\n        abc=text/vndabc\n        ace=application/x-ace-compressed\n        acgi=text/html\n        afl=video/animaflex\n        ai=application/postscript\n        aif=audio/aiff\n        aifc=audio/aiff\n        aiff=audio/aiff\n        aim=application/x-aim\n        aip=text/x-audiosoft-intra\n        alz=application/x-alz-compressed\n        ani=application/x-navi-animation\n        aos=application/x-nokia-9000-communicator-add-on-software\n        aps=application/mime\n        arc=application/x-arc-compressed\n        arj=application/arj\n        art=image/x-jg\n        asf=video/x-ms-asf\n        asm=text/x-asm\n        asp=text/asp\n        asx=application/x-mplayer2\n        au=audio/basic\n        avi=video/x-msvideo\n        avs=video/avs-video\n        bcpio=application/x-bcpio\n        bin=application/mac-binary\n        bmp=image/bmp\n        boo=application/book\n        book=application/book\n        boz=application/x-bzip2\n        bsh=application/x-bsh\n        bz2=application/x-bzip2\n        bz=application/x-bzip\n        c++=text/plain\n        c=text/x-c\n        cab=application/vnd.ms-cab-compressed\n        cat=application/vndms-pkiseccat\n        cc=text/x-c\n        ccad=application/clariscad\n        cco=application/x-cocoa\n        cdf=application/cdf\n        cer=application/pkix-cert\n        cha=application/x-chat\n        chat=application/x-chat\n        chrt=application/vnd.kde.kchart\n        class=application/java\n        # ? class=application/java-vm\n        com=text/plain\n        conf=text/plain\n        cpio=application/x-cpio\n        cpp=text/x-c\n        cpt=application/mac-compactpro\n        crl=application/pkcs-crl\n        crt=application/pkix-cert\n        crx=application/x-chrome-extension\n        csh=text/x-scriptcsh\n        css=text/css\n        csv=text/csv\n        cxx=text/plain\n        dar=application/x-dar\n        dcr=application/x-director\n        deb=application/x-debian-package\n        deepv=application/x-deepv\n        def=text/plain\n        der=application/x-x509-ca-cert\n        dfont=application/x-font-ttf\n        dif=video/x-dv\n        dir=application/x-director\n        divx=video/divx\n        dl=video/dl\n        dmg=application/x-apple-diskimage\n        doc=application/msword\n        dot=application/msword\n        dp=application/commonground\n        drw=application/drafting\n        dump=application/octet-stream\n        dv=video/x-dv\n        dvi=application/x-dvi\n        dwf=drawing/x-dwf=(old)\n        dwg=application/acad\n        dxf=application/dxf\n        dxr=application/x-director\n        el=text/x-scriptelisp\n        elc=application/x-bytecodeelisp=(compiled=elisp)\n        eml=message/rfc822\n        env=application/x-envoy\n        eot=application/vnd.ms-fontobject\n        eps=application/postscript\n        es=application/x-esrehber\n        etx=text/x-setext\n        evy=application/envoy\n        exe=application/octet-stream\n        f77=text/x-fortran\n        f90=text/x-fortran\n        f=text/x-fortran\n        fdf=application/vndfdf\n        fif=application/fractals\n        fli=video/fli\n        flo=image/florian\n        flv=video/x-flv\n        flx=text/vndfmiflexstor\n        fmf=video/x-atomic3d-feature\n        for=text/x-fortran\n        fpx=image/vndfpx\n        frl=application/freeloader\n        funk=audio/make\n        g3=image/g3fax\n        g=text/plain\n        gif=image/gif\n        gl=video/gl\n        gsd=audio/x-gsm\n        gsm=audio/x-gsm\n        gsp=application/x-gsp\n        gss=application/x-gss\n        gtar=application/x-gtar\n        gz=application/x-compressed\n        gzip=application/x-gzip\n        h=text/x-h\n        hdf=application/x-hdf\n        help=application/x-helpfile\n        hgl=application/vndhp-hpgl\n        hh=text/x-h\n        hlb=text/x-script\n        hlp=application/hlp\n        hpg=application/vndhp-hpgl\n        hpgl=application/vndhp-hpgl\n        hqx=application/binhex\n        hta=application/hta\n        htc=text/x-component\n        htm=text/html\n        html=text/html\n        htmls=text/html\n        htt=text/webviewhtml\n        htx=text/html\n        ice=x-conference/x-cooltalk\n        ico=image/x-icon\n        ics=text/calendar\n        icz=text/calendar\n        idc=text/plain\n        ief=image/ief\n        iefs=image/ief\n        iges=application/iges\n        igs=application/iges\n        ima=application/x-ima\n        imap=application/x-httpd-imap\n        inf=application/inf\n        ins=application/x-internett-signup\n        ip=application/x-ip2\n        isu=video/x-isvideo\n        it=audio/it\n        iv=application/x-inventor\n        ivr=i-world/i-vrml\n        ivy=application/x-livescreen\n        jam=audio/x-jam\n        jav=text/x-java-source\n        java=text/x-java-source\n        jcm=application/x-java-commerce\n        jfif-tbnl=image/jpeg\n        jfif=image/jpeg\n        jnlp=application/x-java-jnlp-file\n        jpe=image/jpeg\n        jpeg=image/jpeg\n        jpg=image/jpeg\n        jps=image/x-jps\n        js=application/javascript\n        json=application/json\n        jut=image/jutvision\n        kar=audio/midi\n        karbon=application/vnd.kde.karbon\n        kfo=application/vnd.kde.kformula\n        flw=application/vnd.kde.kivio\n        kml=application/vnd.google-earth.kml+xml\n        kmz=application/vnd.google-earth.kmz\n        kon=application/vnd.kde.kontour\n        kpr=application/vnd.kde.kpresenter\n        kpt=application/vnd.kde.kpresenter\n        ksp=application/vnd.kde.kspread\n        kwd=application/vnd.kde.kword\n        kwt=application/vnd.kde.kword\n        ksh=text/x-scriptksh\n        la=audio/nspaudio\n        lam=audio/x-liveaudio\n        latex=application/x-latex\n        lha=application/lha\n        lhx=application/octet-stream\n        list=text/plain\n        lma=audio/nspaudio\n        log=text/plain\n        lsp=text/x-scriptlisp\n        lst=text/plain\n        lsx=text/x-la-asf\n        ltx=application/x-latex\n        lzh=application/octet-stream\n        lzx=application/lzx\n        m1v=video/mpeg\n        m2a=audio/mpeg\n        m2v=video/mpeg\n        m3u=audio/x-mpegurl\n        m=text/x-m\n        man=application/x-troff-man\n        manifest=text/cache-manifest\n        map=application/x-navimap\n        mar=text/plain\n        mbd=application/mbedlet\n        mc$=application/x-magic-cap-package-10\n        mcd=application/mcad\n        mcf=text/mcf\n        mcp=application/netmc\n        me=application/x-troff-me\n        mht=message/rfc822\n        mhtml=message/rfc822\n        mid=application/x-midi\n        midi=application/x-midi\n        mif=application/x-frame\n        mime=message/rfc822\n        mjf=audio/x-vndaudioexplosionmjuicemediafile\n        mjpg=video/x-motion-jpeg\n        mm=application/base64\n        mme=application/base64\n        mod=audio/mod\n        moov=video/quicktime\n        mov=video/quicktime\n        movie=video/x-sgi-movie\n        mp2=audio/mpeg\n        mp3=audio/mpeg\n        mp4=video/mp4\n        mpa=audio/mpeg\n        mpc=application/x-project\n        mpe=video/mpeg\n        mpeg=video/mpeg\n        mpg=video/mpeg\n        mpga=audio/mpeg\n        mpp=application/vndms-project\n        mpt=application/x-project\n        mpv=application/x-project\n        mpx=application/x-project\n        mrc=application/marc\n        ms=application/x-troff-ms\n        mv=video/x-sgi-movie\n        my=audio/make\n        mzz=application/x-vndaudioexplosionmzz\n        nap=image/naplps\n        naplps=image/naplps\n        nc=application/x-netcdf\n        ncm=application/vndnokiaconfiguration-message\n        nif=image/x-niff\n        niff=image/x-niff\n        nix=application/x-mix-transfer\n        nsc=application/x-conference\n        nvd=application/x-navidoc\n        o=application/octet-stream\n        oda=application/oda\n        odb=application/vnd.oasis.opendocument.database\n        odc=application/vnd.oasis.opendocument.chart\n        odf=application/vnd.oasis.opendocument.formula\n        odg=application/vnd.oasis.opendocument.graphics\n        odi=application/vnd.oasis.opendocument.image\n        odm=application/vnd.oasis.opendocument.text-master\n        odp=application/vnd.oasis.opendocument.presentation\n        ods=application/vnd.oasis.opendocument.spreadsheet\n        odt=application/vnd.oasis.opendocument.text\n        oga=audio/ogg\n        ogg=audio/ogg\n        ogv=video/ogg\n        omc=application/x-omc\n        omcd=application/x-omcdatamaker\n        omcr=application/x-omcregerator\n        otc=application/vnd.oasis.opendocument.chart-template\n        otf=application/vnd.oasis.opendocument.formula-template\n        otg=application/vnd.oasis.opendocument.graphics-template\n        oth=application/vnd.oasis.opendocument.text-web\n        oti=application/vnd.oasis.opendocument.image-template\n        otm=application/vnd.oasis.opendocument.text-master\n        otp=application/vnd.oasis.opendocument.presentation-template\n        ots=application/vnd.oasis.opendocument.spreadsheet-template\n        ott=application/vnd.oasis.opendocument.text-template\n        p10=application/pkcs10\n        p12=application/pkcs-12\n        p7a=application/x-pkcs7-signature\n        p7c=application/pkcs7-mime\n        p7m=application/pkcs7-mime\n        p7r=application/x-pkcs7-certreqresp\n        p7s=application/pkcs7-signature\n        p=text/x-pascal\n        part=application/pro_eng\n        pas=text/pascal\n        pbm=image/x-portable-bitmap\n        pcl=application/vndhp-pcl\n        pct=image/x-pict\n        pcx=image/x-pcx\n        pdb=chemical/x-pdb\n        pdf=application/pdf\n        pfunk=audio/make\n        pgm=image/x-portable-graymap\n        pic=image/pict\n        pict=image/pict\n        pkg=application/x-newton-compatible-pkg\n        pko=application/vndms-pkipko\n        pl=text/x-scriptperl\n        plx=application/x-pixclscript\n        pm4=application/x-pagemaker\n        pm5=application/x-pagemaker\n        pm=text/x-scriptperl-module\n        png=image/png\n        pnm=application/x-portable-anymap\n        pot=application/mspowerpoint\n        pov=model/x-pov\n        ppa=application/vndms-powerpoint\n        ppm=image/x-portable-pixmap\n        pps=application/mspowerpoint\n        ppt=application/mspowerpoint\n        ppz=application/mspowerpoint\n        pre=application/x-freelance\n        prt=application/pro_eng\n        ps=application/postscript\n        psd=application/octet-stream\n        pvu=paleovu/x-pv\n        pwz=application/vndms-powerpoint\n        py=text/x-scriptphyton\n        pyc=application/x-bytecodepython\n        qcp=audio/vndqcelp\n        qd3=x-world/x-3dmf\n        qd3d=x-world/x-3dmf\n        qif=image/x-quicktime\n        qt=video/quicktime\n        qtc=video/x-qtc\n        qti=image/x-quicktime\n        qtif=image/x-quicktime\n        ra=audio/x-pn-realaudio\n        ram=audio/x-pn-realaudio\n        rar=application/x-rar-compressed\n        ras=application/x-cmu-raster\n        rast=image/cmu-raster\n        rdf=application/rdf+xml\n        rexx=text/x-scriptrexx\n        rf=image/vndrn-realflash\n        rgb=image/x-rgb\n        rm=application/vndrn-realmedia\n        rmi=audio/mid\n        rmm=audio/x-pn-realaudio\n        rmp=audio/x-pn-realaudio\n        rng=application/ringing-tones\n        rnx=application/vndrn-realplayer\n        roff=application/x-troff\n        rp=image/vndrn-realpix\n        rpm=audio/x-pn-realaudio-plugin\n        rt=text/vndrn-realtext\n        rtf=application/rtf\n        rtx=application/rtx\n        rv=video/vndrn-realvideo\n        s=text/x-asm\n        s3m=audio/s3m\n        s7z=application/x-7z-compressed\n        saveme=application/octet-stream\n        sbk=application/x-tbook\n        scm=text/x-scriptscheme\n        sdml=text/plain\n        sdp=application/sdp\n        sdr=application/sounder\n        sea=application/sea\n        set=application/set\n        sgm=text/x-sgml\n        sgml=text/x-sgml\n        sh=text/x-scriptsh\n        shar=application/x-bsh\n        shtml=text/x-server-parsed-html\n        sid=audio/x-psid\n        skd=application/x-koan\n        skm=application/x-koan\n        skp=application/x-koan\n        skt=application/x-koan\n        sit=application/x-stuffit\n        sitx=application/x-stuffitx\n        sl=application/x-seelogo\n        smi=application/smil\n        smil=application/smil\n        snd=audio/basic\n        sol=application/solids\n        spc=text/x-speech\n        spl=application/futuresplash\n        spr=application/x-sprite\n        sprite=application/x-sprite\n        spx=audio/ogg\n        src=application/x-wais-source\n        ssi=text/x-server-parsed-html\n        ssm=application/streamingmedia\n        sst=application/vndms-pkicertstore\n        step=application/step\n        stl=application/sla\n        stp=application/step\n        sv4cpio=application/x-sv4cpio\n        sv4crc=application/x-sv4crc\n        svf=image/vnddwg\n        svg=image/svg+xml\n        svr=application/x-world\n        swf=application/x-shockwave-flash\n        t=application/x-troff\n        talk=text/x-speech\n        tar=application/x-tar\n        tbk=application/toolbook\n        tcl=text/x-scripttcl\n        tcsh=text/x-scripttcsh\n        tex=application/x-tex\n        texi=application/x-texinfo\n        texinfo=application/x-texinfo\n        text=text/plain\n        tgz=application/gnutar\n        tif=image/tiff\n        tiff=image/tiff\n        tr=application/x-troff\n        tsi=audio/tsp-audio\n        tsp=application/dsptype\n        tsv=text/tab-separated-values\n        turbot=image/florian\n        tte=application/x-font-ttf\n        ttf=application/x-font-ttf\n        ttl=text/turtle\n        txt=text/plain\n        uil=text/x-uil\n        uni=text/uri-list\n        unis=text/uri-list\n        unv=application/i-deas\n        uri=text/uri-list\n        uris=text/uri-list\n        ustar=application/x-ustar\n        uu=text/x-uuencode\n        uue=text/x-uuencode\n        vcd=application/x-cdlink\n        vcf=text/x-vcard\n        vcard=text/x-vcard\n        vcs=text/x-vcalendar\n        vda=application/vda\n        vdo=video/vdo\n        vew=application/groupwise\n        viv=video/vivo\n        vivo=video/vivo\n        vmd=application/vocaltec-media-desc\n        vmf=application/vocaltec-media-file\n        voc=audio/voc\n        vos=video/vosaic\n        vox=audio/voxware\n        vqe=audio/x-twinvq-plugin\n        vqf=audio/x-twinvq\n        vql=audio/x-twinvq-plugin\n        vrml=application/x-vrml\n        vrt=x-world/x-vrt\n        vsd=application/x-visio\n        vst=application/x-visio\n        vsw=application/x-visio\n        w60=application/wordperfect60\n        w61=application/wordperfect61\n        w6w=application/msword\n        wav=audio/wav\n        wb1=application/x-qpro\n        wbmp=image/vnd.wap.wbmp\n        web=application/vndxara\n        webm=video/webm\n        wiz=application/msword\n        wk1=application/x-123\n        wmf=windows/metafile\n        wml=text/vnd.wap.wml\n        wmlc=application/vnd.wap.wmlc\n        wmls=text/vnd.wap.wmlscript\n        wmlsc=application/vnd.wap.wmlscriptc\n        woff=application/font-woff\n        woff2=application/font-woff2\n        word=application/msword\n        wp5=application/wordperfect\n        wp6=application/wordperfect\n        wp=application/wordperfect\n        wpd=application/wordperfect\n        wq1=application/x-lotus\n        wri=application/mswrite\n        wrl=application/x-world\n        wrz=model/vrml\n        wsc=text/scriplet\n        wsrc=application/x-wais-source\n        wtk=application/x-wintalk\n        x-png=image/png\n        xbm=image/x-xbitmap\n        xdr=video/x-amt-demorun\n        xgz=xgl/drawing\n        xif=image/vndxiff\n        xl=application/excel\n        xla=application/excel\n        xlb=application/excel\n        xlc=application/excel\n        xld=application/excel\n        xlk=application/excel\n        xll=application/excel\n        xlm=application/excel\n        xls=application/excel\n        xlt=application/excel\n        xlv=application/excel\n        xlw=application/excel\n        xm=audio/xm\n        xml=application/xml\n        xmz=xgl/movie\n        xpi=application/x-xpinstall\n        xpix=application/x-vndls-xpix\n        xpm=image/x-xpixmap\n        xsr=video/x-amt-showrun\n        xwd=image/x-xwd\n        xyz=chemical/x-pdb\n        z=application/x-compress\n        zip=application/zip\n        zoo=application/octet-stream\n        zsh=text/x-scriptzsh\n\n        # Office 2007 mess - http://wdg.uncc.edu/Microsoft_Office_2007_MIME_Types_for_Apache_and_IIS\n        docx=application/vnd.openxmlformats-officedocument.wordprocessingml.document\n        docm=application/vnd.ms-word.document.macroEnabled.12\n        dotx=application/vnd.openxmlformats-officedocument.wordprocessingml.template\n        dotm=application/vnd.ms-word.template.macroEnabled.12\n        xlsx=application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n        xlsm=application/vnd.ms-excel.sheet.macroEnabled.12\n        xltx=application/vnd.openxmlformats-officedocument.spreadsheetml.template\n        xltm=application/vnd.ms-excel.template.macroEnabled.12\n        xlsb=application/vnd.ms-excel.sheet.binary.macroEnabled.12\n        xlam=application/vnd.ms-excel.addin.macroEnabled.12\n        pptx=application/vnd.openxmlformats-officedocument.presentationml.presentation\n        pptm=application/vnd.ms-powerpoint.presentation.macroEnabled.12\n        ppsx=application/vnd.openxmlformats-officedocument.presentationml.slideshow\n        ppsm=application/vnd.ms-powerpoint.slideshow.macroEnabled.12\n        potx=application/vnd.openxmlformats-officedocument.presentationml.template\n        potm=application/vnd.ms-powerpoint.template.macroEnabled.12\n        ppam=application/vnd.ms-powerpoint.addin.macroEnabled.12\n        sldx=application/vnd.openxmlformats-officedocument.presentationml.slide\n        sldm=application/vnd.ms-powerpoint.slide.macroEnabled.12\n        thmx=application/vnd.ms-officetheme\n        onetoc=application/onenote\n        onetoc2=application/onenote\n        onetmp=application/onenote\n        onepkg=application/onenote\n        # koffice\n\n        # iWork\n        key=application/x-iwork-keynote-sffkey\n        kth=application/x-iwork-keynote-sffkth\n        nmbtemplate=application/x-iwork-numbers-sfftemplate\n        numbers=application/x-iwork-numbers-sffnumbers\n        pages=application/x-iwork-pages-sffpages\n        template=application/x-iwork-pages-sfftemplate\n\n        # Extensions for Mozilla apps (Firefox and friends)\n        xpi=application/x-xpinstall\n      ",
      "filters":null,
      "flash":{
        "cookieName":"PLAY_FLASH",
        "domain":null,
        "httpOnly":true,
        "jwt":{
          "clockSkew":"5 minutes",
          "dataClaim":"data",
          "expiresAfter":null,
          "signatureAlgorithm":"HS256"
        },
        "path":"/",
        "sameSite":"lax",
        "secure":false
      },
      "forwarded":{
        "trustedProxies":["127.0.0.1",
          "::1"],
          "version":"x-forwarded"
      },
      "parser":{
        "maxDiskBuffer":"10m",
        "maxMemoryBuffer":"100k"
      },
      "requestHandler":null,
      "router":null,
      "secret":{
        "key":"changeme",
        "provider":null
      },
      "session":{
        "cookieName":"PLAY_SESSION",
        "domain":null,
        "httpOnly":true,
        "jwt":{
          "clockSkew":"5 minutes",
          "dataClaim":"data",
          "expiresAfter":null,
          "signatureAlgorithm":"HS256"
        },
        "maxAge":null,
        "path":"/",
        "sameSite":"lax",
        "secure":false
      }
    },
    "i18n":{
      "langCookieHttpOnly":false,
      "langCookieName":"PLAY_LANG",
      "langCookieSecure":false,
      "langs":["en",
        "en-US",
        "de-DE"],
        "path":null
    },
    "logger":{
      "includeConfigProperties":false
    },
    "mailer":{
      "connectiontimeout":null,
      "debug":"no",
      "host":"example.com",
      "mock":"yes",
      "password":null,
      "port":25,
      "ssl":"no",
      "timeout":null,
      "tls":"no",
      "tlsRequired":"no",
      "user":null
    },
    "modules":{
      "disabled":[],
      "enabled":["play.api.libs.ws.ahc.AhcWSModule",
        "play.libs.ws.ahc.AhcWSModule",
        "play.api.inject.BuiltinModule",
        "play.api.i18n.I18nModule",
        "play.api.mvc.CookiesModule",
        "controllers.AssetsModule"]
    },
    "server":{
      "akka":{
        "bindTimeout":"5 seconds",
        "default-host-header":"",
        "illegal-response-header-value-processing-mode":"warn",
        "max-content-length":"infinite",
        "requestTimeout":"infinite",
        "server-header":null,
        "tls-session-info-header":"on",
        "transparent-head-requests":"off"
      },
      "dir":"/Users/nrm/Sources/MDPM/projects/IAM/iam-impl",
      "http":{
        "address":"0.0.0.0",
        "idleTimeout":"75 seconds",
        "port":"55960"
      },
      "https":{
        "address":"0.0.0.0",
        "engineProvider":"play.core.server.ssl.DefaultSSLEngineProvider",
        "idleTimeout":"75 seconds",
        "keyStore":{
          "password":"",
          "type":"JKS"
        },
        "needClientAuth":false,
        "trustStore":{
          "noCaVerification":false
        },
        "wantClientAuth":false
      },
      "pidfile":{
        "path":"/Users/nrm/Sources/MDPM/projects/IAM/iam-impl/RUNNING_PID"
      },
      "provider":"play.core.server.AkkaHttpServerProvider",
      "websocket":{
        "frame":{
          "maxLength":"64k"
        }
      }
    },
    "temporaryFile":{
      "reaper":{
        "enabled":false,
        "initialDelay":"5 minutes",
        "interval":"5 minutes",
        "olderThan":"5 minutes"
      }
    },
    "ws":{
      "ahc":{
        "disableUrlEncoding":false,
        "idleConnectionInPoolTimeout":"1 minute",
        "keepAlive":true,
        "maxConnectionLifetime":null,
        "maxConnectionsPerHost":-1,
        "maxConnectionsTotal":-1,
        "maxNumberOfRedirects":5,
        "maxRequestRetry":5
      },
      "cache":{
        "cacheManagerResource":null,
        "cacheManagerURI":null,
        "cachingProviderName":"",
        "enabled":false,
        "heuristics":{
          "enabled":false
        },
        "name":"play-ws-cache"
      },
      "compressionEnabled":false,
      "followRedirects":true,
      "ssl":{
        "checkRevocation":null,
        "debug":{
          "all":false,
          "certpath":false,
          "data":false,
          "defaultctx":false,
          "handshake":false,
          "keygen":false,
          "keymanager":false,
          "ocsp":false,
          "packet":false,
          "plaintext":false,
          "pluggability":false,
          "record":false,
          "session":false,
          "sessioncache":false,
          "ssl":false,
          "sslctx":false,
          "trustmanager":false,
          "verbose":false
        },
        "default":false,
        "disabledKeyAlgorithms":["RSA keySize < 2048",
          "DSA keySize < 2048",
          "EC keySize < 224"],
          "disabledSignatureAlgorithms":["MD2",
            "MD4",
            "MD5"],
            "enabledCipherSuites":[],
            "enabledProtocols":["TLSv1.2",
              "TLSv1.1",
              "TLSv1"],
              "hostnameVerifierClass":null,
              "keyManager":{
                "algorithm":null,
                "prototype":{
                  "stores":{
                    "data":null,
                    "password":null,
                    "path":null,
                    "type":null
                  }
                },
                "stores":[]
              },
              "loose":{
                "acceptAnyCertificate":false,
                "allowLegacyHelloMessages":null,
                "allowUnsafeRenegotiation":null,
                "allowWeakCiphers":false,
                "allowWeakProtocols":false,
                "disableHostnameVerification":false,
                "disableSNI":false
              },
              "protocol":"TLSv1.2",
              "revocationLists":[],
              "sslParameters":{
                "clientAuth":"default",
                "protocols":[]
              },
              "trustManager":{
                "algorithm":null,
                "prototype":{
                  "stores":{
                    "data":null,
                    "path":null,
                    "type":null
                  }
                },
                "stores":[]
              }
      },
      "timeout":{
        "connection":"2 minutes",
        "idle":"2 minutes",
        "request":"2 minutes"
      },
      "useProxyProperties":true,
      "useragent":null
    }
  },
  "promise":{
    "akka":{
      "actor":{
        "typed":{
          "timeout":"5s"
        }
      }
    }
  },
  "socksNonProxyHosts":"local|*.local|169.254/16|*.169.254/16",
  "ssl-config":{
    "checkRevocation":null,
    "debug":{
      "all":false,
      "certpath":false,
      "data":false,
      "defaultctx":false,
      "handshake":false,
      "keygen":false,
      "keymanager":false,
      "ocsp":false,
      "packet":false,
      "plaintext":false,
      "pluggability":false,
      "record":false,
      "session":false,
      "sessioncache":false,
      "ssl":false,
      "sslctx":false,
      "trustmanager":false,
      "verbose":false
    },
    "default":false,
    "disabledKeyAlgorithms":["RSA keySize < 2048",
      "DSA keySize < 2048",
      "EC keySize < 224"],
      "disabledSignatureAlgorithms":["MD2",
        "MD4",
        "MD5"],
        "enabledCipherSuites":[],
        "enabledProtocols":["TLSv1.2",
          "TLSv1.1",
          "TLSv1"],
          "hostnameVerifierClass":null,
          "keyManager":{
            "algorithm":null,
            "prototype":{
              "stores":{
                "data":null,
                "password":null,
                "path":null,
                "type":null
              }
            },
            "stores":[]
          },
          "logger":"com.typesafe.sslconfig.akka.util.AkkaLoggerBridge",
          "loose":{
            "acceptAnyCertificate":false,
            "allowLegacyHelloMessages":null,
            "allowUnsafeRenegotiation":null,
            "allowWeakCiphers":false,
            "allowWeakProtocols":false,
            "disableHostnameVerification":false,
            "disableSNI":false
          },
          "protocol":"TLSv1.2",
          "revocationLists":[],
          "sslParameters":{
            "clientAuth":"default",
            "protocols":[]
          },
          "trustManager":{
            "algorithm":null,
            "prototype":{
              "stores":{
                "data":null,
                "path":null,
                "type":null
              }
            },
            "stores":[]
          }
  },
  "sun":{
    "arch":{
      "data":{
        "model":"64"
      }
    },
    "boot":{
      "class":{
        "path":"/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre/classes:/Users/nrm/Library/Caches/IdeaIC2018.1/captureAgent/debugger-agent-storage.jar"
      },
      "library":{
        "path":"/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre/lib"
      }
    },
    "cpu":{
      "endian":"little",
      "isalist":""
    },
    "io":{
      "unicode":{
        "encoding":"UnicodeBig"
      }
    },
    "java":{
      "command":"xsbt.boot.Boot runAll",
      "launcher":"SUN_STANDARD"
    },
    "jnu":{
      "encoding":"UTF-8"
    },
    "management":{
      "compiler":"HotSpot 64-Bit Tiered Compilers"
    },
    "nio":{
      "ch":{
        "bugLevel":""
      }
    },
    "os":{
      "patch":{
        "level":"unknown"
      }
    }
  },
  "user":{
    "country":"DE",
    "dir":"/Users/nrm/Sources/MDPM/projects/IAM",
    "home":"/Users/nrm",
    "language":"en",
    "name":"nrm",
    "timezone":"Europe/Berlin"
  }
}
